func nb-select(nodeset select) {
    default = {
        'size': 'm'
        'theme': 'normal'
        'direction': 'bottom'
    }

    nb-block('select', nb-extend(default, select))
}

match .select nb {
    <div class="nb-select _init  nb-select_size_{ .size } nb-select_theme_{ .theme }" data-nb="select"  data-nb-direction ="{ .direction }">
        apply . nb-main-attrs

        if .within {
           @data-nb-within = .within
        }

        <button class="nb-button nb-select__button _init" data-nb="button">

            if .theme == 'normal' {
                if .size != 's' {
                    @class += ' nb-normal-button'
                } else {
                    @class += ' nb-small-button'
                }
            } else {
                if .size != 's' {
                    @class += ' nb-{ .theme }-button'
                } else {
                    @class += ' nb-small-{ .theme }-button'
                }
            }

            if .disabled  {
                @class += ' is-nb-disabled'
                @disabled = 'disabled'
            }

            if .mod == 'round' {
                @class = 'nb-button nb-button_type_round'
            }

            <span class="nb-button-content">
                for .items {
                      if .selected {
                       .text
                  }
                }
            </span>
        </button>
        <select id="nb-select_{ .id }" class="nb-select__fallback" name ="{ .id }">
            if ( .disabled ) {
                @disabled = 'disabled'
            }

            for .items {
                <option>
                    @label = .text
                    @value = .value

                    if (.selected) {
                          @selected = ''
                    }

                    .text
                </option>
            }
        </select>
    </div>
}

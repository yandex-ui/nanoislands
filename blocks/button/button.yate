func nb-button(nodeset options) {
    default = {
        'size': 'm'
        'theme': 'normal'
    }

    if options.type == 'file' {
        nb-block('buttonAttach', nb-extend(default, options))
    } else if options.type == 'inline' {
        nb-block('buttonSpan', nb-extend(default, options))
    } else if options.type == 'label' {
        nb-block('buttonLabel', nb-extend(default, options))
    } else if options.type == 'link' {
        nb-block('buttonLink', nb-extend(default, options))
    }  else {
        nb-block('button', nb-extend(default, options))
    }
}

func _nb-button-attributes(type) {

    _size-theme-type-class({
       'name': 'button'
       'size': .size
       'theme': .theme
    })

    if .disabled {
        @class += ' nb-is-disabled'

        if type == 'button' {
            @disabled = 'disabled'
        }
    }

    if type == 'attach' {
        @class += ' nb-attach-button'
    }

    if .checked {
        @class += ' is-checked'
    }

    if type == 'button' {
        if .name {
            @name = .name
        }

        if .attrs.name {
            @name = .attrs.name
        }
    }

    if !( .content ) && (.icon || .iconText) {
        @class += ' nb-with-only-button'
    }


}

func _nb-button-content() {
    if .iconText {
        <span class="nb-icon nb-icon_text">
          .iconText
        </span>
    }
    if .content {
        html(.content)
    }
}

func _nb-button-static(){
    if !( .static ) {
        @class += ' _init'
        @data-nb = 'button'
    }
}

match .button nb {
    <button>
        _nb-button-attributes('button')

        _nb-button-static()

        apply . nb-main-attrs

        <span class="nb-button-content">
            apply .icon nb

            _nb-button-content()
        </span>
    </button>
}

match .buttonLink nb {
    <a>
        _nb-button-attributes('link')

         _nb-button-static()

        apply . nb-main-attrs

        <span class="nb-button-content">
            apply .icon nb

            _nb-button-content()
        </span>
    </a>
}

match .buttonSpan nb {
    <span>
        _nb-button-attributes('span')

        _nb-button-static()

        apply . nb-main-attrs

        <span class="nb-button-content">
            apply .icon nb

            _nb-button-content()
        </span>
    </span>
}

match .buttonLabel nb {
    <label>
        _nb-button-attributes('label')

        _nb-button-static()

        apply . nb-main-attrs

        <span class="nb-button-content">
            apply .icon nb

            _nb-button-content()
        </span>
    </label>
}

match .buttonAttach nb {
    <label>
        _nb-button-attributes('attach')

        _nb-button-static()

        apply . nb-main-attrs

        <span class="nb-file-intruder">
            <span class="nb-file-intruder__inner">
                <input class="nb-file-intruder__input" type="file">
                    if .attrs.multiple || .multiple {
                        @multiple = "multiple"
                    }

                    if .name {
                        @name = .name
                    }

                    if .attrs.name {
                        @name = "{.attrs.name}"
                    }
                    if .attrs.title {
                        @title += "{.attrs.title}"
                    }

                    if .disabled {
                        @disabled = 'disabled'
                    }
                </input>
                <span class="nb-file-intruder__focus"></span>
            </span>
        </span>
        <span class="nb-button-content">
            apply .icon nb

            _nb-button-content()
        </span>
    </label>
}
